<section>
    <div class="container">

        <div class="carousels">
            <div class="nav navs-left">
                <div class="icon-chevron-left carousel-arrow-icon-left">
                    {{ 'icon-chevron-yellow-left.svg' | asset_url | img_tag }}
                </div>
            </div>

            <ul class="carousels-content">
                {% for product in collections.favorite.products  %}
                <li class="slides" href="{{ product.url }}">
                    <img src="{{ product.featured_image | product_img_url: 'medium' }}" alt="">
                    <div class="slide--inner">
                        <span id="icon--favorite" class="icon--fav"></span>
                        <span>{{ product.title }}</span>
                        <span>{{ product.price | money }}</span>
                        {% if product.tags != blank %}
                        <span>{{ product.tags }}</span>
                        {% endif %}
                        {% if product.tags == blank %}
                        <span>&nbsp;</span>
                        {% endif %}
                        <a href="#">shop now</a>
                    </div>
                </li>
                {% endfor %}
            </ul>

            <div class="nav navs-right">
                <div class="ion-chevron-right carousel-arrow-icon-right">
                    {{ 'icon-chevron-yellow-right.svg' | asset_url | img_tag }}
                </div>
            </div>
        </div>

    </div>
</section>

{% javascript %}


var carousels = document.querySelector('.carousels');
var carouselsContent = document.querySelector('.carousels-content');
var sliders = document.querySelectorAll('.slides');
var arrayOfSlides = Array.prototype.slice.call(sliders);
var carouselDisplaying;
var screenSize;
setScreenSize();
var lengthOfSlide;

function addClone() {
    var lastSlide = carouselsContent.lastElementChild.cloneNode(true);
    lastSlide.style.left = (-lengthOfSlide) + "px";
    carouselsContent.insertBefore(lastSlide, carouselsContent.firstChild);
}
// addClone();

function removeClone() {
    var firstSlide = carouselsContent.firstElementChild;
    firstSlide.parentNode.removeChild(firstSlide);
}

function moveSlidesRight() {
    var sliders = document.querySelectorAll('.slides');
    var slidesArray = Array.prototype.slice.call(sliders);
    var width = 0;

    slidesArray.forEach(function (el, i) {
        el.style.left = width + "px";
        width += lengthOfSlide;
    });
    addClone();
}
moveSlidesRight();

function moveSlidesLeft() {
    var sliders = document.querySelectorAll('.slides');
    var slidesArray = Array.prototype.slice.call(slides);
    slidesArray = slidesArray.reverse();
    var maxWidth = (slidesArray.length - 1) * lengthOfSlide;

    slidesArray.forEach(function (el, i) {
        maxWidth -= lengthOfSlide;
        el.style.left = maxWidth + "px";
    });
}

window.addEventListener('resize', setScreenSize);

function setScreenSize() {
    if (window.innerWidth >= 1024) {
        carouselDisplaying = 4;
    } else if (window.innerWidth >= 768) {
        carouselDisplaying = 3;
    } else if (window.innerWidth >= 600) {
        carouselDisplaying = 2;
    } else if (window.innerWidth >= 414) {
        carouselDisplaying = 1;
    } else {
        carouselDisplaying = 1;
    }
    getScreenSize();
}

function getScreenSize() {
    var sliders = document.querySelectorAll('.slides');
    var slidesArray = Array.prototype.slice.call(sliders);
    lengthOfSlide = (carousels.offsetWidth / carouselDisplaying);
    var initialWidth = -lengthOfSlide;
    slidesArray.forEach(function (el) {
        el.style.width = lengthOfSlide + "px";
        el.style.left = initialWidth + "px";
        initialWidth += lengthOfSlide;
    });
}


var rightNav = document.querySelector('.navs-right');
rightNav.addEventListener('click', moveLeft);

var moving = true;
function moveRight() {
    if (moving) {
        moving = false;
        var lastSlide = carouselsContent.lastElementChild;
        lastSlide.parentNode.removeChild(lastSlide);
        carouselsContent.insertBefore(lastSlide, carouselsContent.firstChild);
        removeClone();
        var firstSlide = carouselsContent.firstElementChild;
        firstSlide.addEventListener('transitionend', activateAgain);
        moveSlidesRight();
    }
}

function activateAgain() {
    var firstSlide = carouselsContent.firstElementChild;
    moving = true;
    firstSlide.removeEventListener('transitionend', activateAgain);
}

var leftNav = document.querySelector('.navs-left');
leftNav.addEventListener('click', moveRight);

// var moveLeftAgain = true;

function moveLeft() {
    if (moving) {
        moving = false;
        removeClone();
        var firstSlide = carouselsContent.firstElementChild;
        firstSlide.addEventListener('transitionend', replaceToEnd);
        moveSlidesLeft();
    }
}

function replaceToEnd() {
    var firstSlide = carouselsContent.firstElementChild;
    firstSlide.parentNode.removeChild(firstSlide);
    carouselsContent.appendChild(firstSlide);
    firstSlide.style.left = ((arrayOfSlides.length - 1) * lengthOfSlide) + "px";
    addClone();
    moving = true;
    firstSlide.removeEventListener('transitionend', replaceToEnd);
}




carouselsContent.addEventListener('mousedown', seeMovement);

var initialX;
var initialPos;
function seeMovement(e) {
    initialX = e.clientX;
    getInitialPos();
    carouselsContent.addEventListener('mousemove', slightMove);
    document.addEventListener('mouseup', moveBasedOnMouse);
}

function slightMove(e) {
    if (moving) {
        var movingX = e.clientX;
        var difference = initialX - movingX;
        if (Math.abs(difference) < (lengthOfSlide / 4)) {
            slightMoveSlides(difference);
        }
    }
}

function getInitialPos() {
    var sliders = document.querySelectorAll('.slides');
    var slidesArray = Array.prototype.slice.call(sliders);
    initialPos = [];
    slidesArray.forEach(function (el) {
        var left = Math.floor(parseInt(el.style.left.slice(0, -2)));
        initialPos.push(left);
    });
}

function slightMoveSlides(newX) {
    var sliders = document.querySelectorAll('.slides');
    var slidesArray = Array.prototype.slice.call(sliders);
    slidesArray.forEach(function (el, i) {
        var oldLeft = initialPos[i];
        el.style.left = (oldLeft + newX) + "px";
    });
}

function moveBasedOnMouse(e) {
    var finalX = e.clientX;
    if (initialX - finalX > 0) {
        moveRight();
    } else if (initialX - finalX < 0) {
        moveLeft();
    }
    document.removeEventListener('mouseup', moveBasedOnMouse);
    carouselsContent.removeEventListener('mousemove', slightMove);
}
    
{% endjavascript %}